{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started Download MicroPython for ESP32. For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout ls / dev / tty * metadata.md","title":"Materials"},{"location":"#getting-started","text":"Download MicroPython for ESP32. For full documentation visit mkdocs.org .","title":"Getting started"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"ls / dev / tty * metadata.md","title":"Project layout"},{"location":"test/","text":"Getting started Download MicroPython for ESP32. For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Do try this at home ... Project layout ls / dev / tty * This will list your ESP32 e.g. ttyUSB0 pip install esptool blabla rshell ' esptool.py --chip esp32 --port /dev/ttyUSB0 erase_flash blabla rshell ' pip3 install rshell this will give esptool . py v2 . 6 Serial port / dev / ttyUSB0 Connecting ........ _____ ..... _____ ..... _____ ..... _____ . Chip is ESP32D0WDQ6 ( revision 1 ) Features : WiFi , BT , Dual Core , 240 MHz , VRef calibration in efuse , Coding Scheme None MAC : 3 c : 71 : bf : 47 : ba : d0 Uploading stub ... Running stub ... Stub running ... Erasing flash ( this may take a while ) ... Chip erase completed successfully in 9 . 2 s Hard resetting via RTS pin ... whaaa screen -port /dev/ttyUSB0 115200 whaaa rshell -p /dev/ttyUSB0 whaaa ls /pyboard/ whadafuck Bash #!/bin/bash STR = Hello World! echo $STR C #include int main(void) { printf ( hello, world \\n ); } C++ #include iostream int main () { std :: cout Hello, world! \\n ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( Hello, world! ); } } python Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Robotics"},{"location":"test/#getting-started","text":"Download MicroPython for ESP32. For full documentation visit mkdocs.org .","title":"Getting started"},{"location":"test/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Do try this at home ...","title":"Commands"},{"location":"test/#project-layout","text":"ls / dev / tty * This will list your ESP32 e.g. ttyUSB0 pip install esptool blabla rshell ' esptool.py --chip esp32 --port /dev/ttyUSB0 erase_flash blabla rshell ' pip3 install rshell this will give esptool . py v2 . 6 Serial port / dev / ttyUSB0 Connecting ........ _____ ..... _____ ..... _____ ..... _____ . Chip is ESP32D0WDQ6 ( revision 1 ) Features : WiFi , BT , Dual Core , 240 MHz , VRef calibration in efuse , Coding Scheme None MAC : 3 c : 71 : bf : 47 : ba : d0 Uploading stub ... Running stub ... Stub running ... Erasing flash ( this may take a while ) ... Chip erase completed successfully in 9 . 2 s Hard resetting via RTS pin ... whaaa screen -port /dev/ttyUSB0 115200 whaaa rshell -p /dev/ttyUSB0 whaaa ls /pyboard/ whadafuck Bash #!/bin/bash STR = Hello World! echo $STR C #include int main(void) { printf ( hello, world \\n ); } C++ #include iostream int main () { std :: cout Hello, world! \\n ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( Hello, world! ); } } python Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Project layout"},{"location":"course/","text":"Getting started Download MicroPython for ESP32. For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout ls / dev / tty * metadata.md","title":"Getting started"},{"location":"course/#getting-started","text":"Download MicroPython for ESP32. For full documentation visit mkdocs.org .","title":"Getting started"},{"location":"course/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"course/#project-layout","text":"ls / dev / tty * metadata.md","title":"Project layout"},{"location":"course/test/","text":"Getting started Download MicroPython for ESP32. For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Do try this at home ... Project layout ls / dev / tty * This will list your ESP32 e.g. ttyUSB0 pip install esptool blabla rshell ' esptool.py --chip esp32 --port /dev/ttyUSB0 erase_flash blabla rshell ' pip3 install rshell this will give esptool . py v2 . 6 Serial port / dev / ttyUSB0 Connecting ........ _____ ..... _____ ..... _____ ..... _____ . Chip is ESP32D0WDQ6 ( revision 1 ) Features : WiFi , BT , Dual Core , 240 MHz , VRef calibration in efuse , Coding Scheme None MAC : 3 c : 71 : bf : 47 : ba : d0 Uploading stub ... Running stub ... Stub running ... Erasing flash ( this may take a while ) ... Chip erase completed successfully in 9 . 2 s Hard resetting via RTS pin ... whaaa screen -port /dev/ttyUSB0 115200 whaaa rshell -p /dev/ttyUSB0 whaaa ls /pyboard/ whadafuck Bash #!/bin/bash STR = Hello World! echo $STR C #include int main(void) { printf ( hello, world \\n ); } C++ #include iostream int main () { std :: cout Hello, world! \\n ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( Hello, world! ); } } python Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Micro Python"},{"location":"course/test/#getting-started","text":"Download MicroPython for ESP32. For full documentation visit mkdocs.org .","title":"Getting started"},{"location":"course/test/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Do try this at home ...","title":"Commands"},{"location":"course/test/#project-layout","text":"ls / dev / tty * This will list your ESP32 e.g. ttyUSB0 pip install esptool blabla rshell ' esptool.py --chip esp32 --port /dev/ttyUSB0 erase_flash blabla rshell ' pip3 install rshell this will give esptool . py v2 . 6 Serial port / dev / ttyUSB0 Connecting ........ _____ ..... _____ ..... _____ ..... _____ . Chip is ESP32D0WDQ6 ( revision 1 ) Features : WiFi , BT , Dual Core , 240 MHz , VRef calibration in efuse , Coding Scheme None MAC : 3 c : 71 : bf : 47 : ba : d0 Uploading stub ... Running stub ... Stub running ... Erasing flash ( this may take a while ) ... Chip erase completed successfully in 9 . 2 s Hard resetting via RTS pin ... whaaa screen -port /dev/ttyUSB0 115200 whaaa rshell -p /dev/ttyUSB0 whaaa ls /pyboard/ whadafuck Bash #!/bin/bash STR = Hello World! echo $STR C #include int main(void) { printf ( hello, world \\n ); } C++ #include iostream int main () { std :: cout Hello, world! \\n ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( Hello, world! ); } } python Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Project layout"}]}